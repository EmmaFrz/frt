{"ast":null,"code":"import { applyMiddleware, compose, createStore } from \"redux\";\nimport reducers from \"../reducers/index\";\nimport { routerMiddleware } from \"react-router-redux\";\nimport createHistory from \"history/createBrowserHistory\";\nimport thunk from 'redux-thunk';\nvar history = createHistory();\nvar routeMiddleware = routerMiddleware(history);\nvar middlewares = [thunk, routeMiddleware];\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default function configureStore(initialState) {\n  var store = createStore(reducers, initialState, composeEnhancers(applyMiddleware.apply(void 0, middlewares)));\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers/index', function () {\n      var nextRootReducer = require('../reducers/index');\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\nexport { history };","map":{"version":3,"sources":["/home/jesus/Documentos/remesas-app/src/appRedux/store/index.js"],"names":["applyMiddleware","compose","createStore","reducers","routerMiddleware","createHistory","thunk","history","routeMiddleware","middlewares","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","initialState","store","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,OAAzB,EAAkCC,WAAlC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,IAAMC,OAAO,GAAGF,aAAa,EAA7B;AACA,IAAMG,eAAe,GAAGJ,gBAAgB,CAACG,OAAD,CAAxC;AAEA,IAAME,WAAW,GAAG,CAACH,KAAD,EAAQE,eAAR,CAApB;AACA,IAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CX,OAAxE;AAEA,eAAe,SAASY,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,MAAMC,KAAK,GAAGb,WAAW,CAACC,QAAD,EAAWW,YAAX,EACvBJ,gBAAgB,CAACV,eAAe,MAAf,SAAmBS,WAAnB,CAAD,CADO,CAAzB;;AAGA,MAAIO,MAAM,CAACC,GAAX,EAAgB;AACd;AACAD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,mBAAlB,EAAuC,YAAM;AAC3C,UAAMC,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA/B;;AACAL,MAAAA,KAAK,CAACM,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AACD,SAAOJ,KAAP;AACD;AACD,SAAQR,OAAR","sourcesContent":["import {applyMiddleware, compose, createStore} from \"redux\";\nimport reducers from \"../reducers/index\";\nimport {routerMiddleware} from \"react-router-redux\";\nimport createHistory from \"history/createBrowserHistory\";\nimport thunk from 'redux-thunk';\n\nconst history = createHistory();\nconst routeMiddleware = routerMiddleware(history);\n\nconst middlewares = [thunk, routeMiddleware];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(initialState) {\n  const store = createStore(reducers, initialState,\n    composeEnhancers(applyMiddleware(...middlewares)));\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers/index', () => {\n      const nextRootReducer = require('../reducers/index');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  return store;\n}\nexport {history};\n"]},"metadata":{},"sourceType":"module"}