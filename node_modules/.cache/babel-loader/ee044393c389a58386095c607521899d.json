{"ast":null,"code":"import _classCallCheck from \"/home/emmanuel/Documents/frt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/emmanuel/Documents/frt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/emmanuel/Documents/frt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/emmanuel/Documents/frt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/emmanuel/Documents/frt/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/emmanuel/Documents/frt/src/routes/Transacciones/index.js\";\nimport React from \"react\";\nimport { Form, Table, Button, Icon, DatePicker, Input, Card, Col, Row } from \"antd\";\nimport { Link } from 'react-router-dom';\nvar RangePicker = DatePicker.RangePicker;\nvar columns = [{\n  title: 'Id',\n  dataIndex: 'id',\n  key: 'id'\n}, {\n  title: 'Cedula Emisor',\n  dataIndex: 'cedula',\n  key: 'cedula'\n}, {\n  title: 'Nombre Emisor',\n  dataIndex: 'nombre',\n  key: 'Nombre'\n}, {\n  title: 'Banco Emisor',\n  dataIndex: 'banco',\n  key: 'banco'\n}, {\n  title: 'Cedula Receptor',\n  dataIndex: 'cedula_receptor',\n  key: 'cedula_receptor'\n}, {\n  title: 'Nombre Receptor',\n  dataIndex: 'nombre_receptor',\n  key: 'nombre_receptor'\n}, {\n  title: 'Banco Receptor',\n  dataIndex: 'banco_receptor',\n  key: 'banco_receptor'\n}, {\n  title: 'Monto Enviado',\n  dataIndex: 'monto_enviado',\n  key: 'monto_enviado'\n}, {\n  title: 'Estatus Transaccion',\n  dataIndex: 'status',\n  key: 'status'\n}];\nvar dataSource = [{\n  key: '1',\n  id: 1,\n  cedula: 25443711,\n  nombre: 'Emmanuel José',\n  banco: 'BANESCO',\n  cedula_receptor: 23791618,\n  nombre_receptor: 'Yoselin Torres',\n  banco_receptor: 'BANESCO',\n  monto_enviado: 150000,\n  status: 'Aprobado'\n}, {\n  key: '2',\n  id: 2,\n  cedula: 24956352,\n  nombre: 'Jesús Medina',\n  banco: 'VENEZUELA',\n  cedula_receptor: 23558642,\n  nombre_receptor: 'Cristian Gonzalez',\n  banco_receptor: 'BANESCO',\n  monto_enviado: 95000,\n  status: 'Procesando'\n}, {\n  key: '3',\n  id: 3,\n  cedula: 24996782,\n  nombre: 'Moises Flores',\n  banco: 'MICROFINANCIERO',\n  cedula_receptor: 21986320,\n  nombre_receptor: 'Felix Maita',\n  banco_receptor: 'BANFANB',\n  monto_enviado: 650000,\n  status: 'Rechazado'\n}, {\n  key: '4',\n  id: 4,\n  cedula: 24996782,\n  nombre: 'Ibai Llanos',\n  banco: 'BBVA',\n  cedula_receptor: 21986320,\n  nombre_receptor: 'Emmanuel José',\n  banco_receptor: 'BANESCO',\n  monto_enviado: 650000,\n  status: 'Procesando'\n}];\n\nvar Transacciones =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Transacciones, _React$Component);\n\n  function Transacciones() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Transacciones);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Transacciones)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dataSource: dataSource\n    };\n\n    _this.filterName = function (bank, name) {\n      _this.setState({\n        dataSource: dataSource\n      });\n\n      var newMap = [];\n\n      _this.state.dataSource.map(function (data) {\n        if (data.nombre === name) {\n          newMap.push(data);\n        }\n\n        if (data.banco === bank) {\n          newMap.push(data);\n        }\n\n        if (data.nombre_receptor === name) {\n          newMap.push(data);\n        }\n      });\n\n      return newMap;\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      var datos = _this.filterName(event.target.banco.value, event.target.nombre.value);\n\n      _this.setState({\n        dataSource: datos\n      });\n\n      if (event.target.nombre.value === '' && event.target.banco.value === '') {\n        _this.setState({\n          dataSource: dataSource\n        });\n      }\n    };\n\n    _this.handleChange = function (event) {};\n\n    return _this;\n  }\n\n  _createClass(Transacciones, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          padding: '30px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"T\\xFA seccion de Transacciones\"), React.createElement(Row, {\n        gutter: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Tasa de cambio\",\n        extra: React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \"Actualizar \", React.createElement(Icon, {\n          type: \"reload\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        })),\n        style: {\n          height: 200,\n          width: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"8.000 VEF\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Datos pueden cambiar segun avance el dia\"))), React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Busqueda Inteligente\",\n        extra: React.createElement(Link, {\n          to: \"/transacciones/registro\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \"Nueva Transaccion \", React.createElement(Icon, {\n          type: \"plus-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        })),\n        style: {\n          height: 200,\n          width: 650\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Nombres\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"nombre\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        label: \"Fechas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(RangePicker, {\n        style: {\n          width: 240\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        label: \"Banco\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"banco\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Buscar\", React.createElement(Icon, {\n        type: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))))))), React.createElement(Table, {\n        columns: columns,\n        dataSource: this.state.dataSource,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Transacciones;\n}(React.Component);\n\nexport default Transacciones;","map":{"version":3,"sources":["/home/emmanuel/Documents/frt/src/routes/Transacciones/index.js"],"names":["React","Form","Table","Button","Icon","DatePicker","Input","Card","Col","Row","Link","RangePicker","columns","title","dataIndex","key","dataSource","id","cedula","nombre","banco","cedula_receptor","nombre_receptor","banco_receptor","monto_enviado","status","Transacciones","state","filterName","bank","name","setState","newMap","map","data","push","handleSubmit","event","preventDefault","datos","target","value","handleChange","padding","height","width","xs","span","offset","sm","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Form, Table, Button,Icon, DatePicker, Input, Card, Col, Row } from \"antd\";\nimport {Link} from 'react-router-dom'\nconst { RangePicker } = DatePicker;\nconst columns = [\n  {\n    title: 'Id',\n    dataIndex: 'id',\n    key: 'id',\n  },\n  {\n    title: 'Cedula Emisor',\n    dataIndex: 'cedula',\n    key: 'cedula',\n  },\n  {\n    title: 'Nombre Emisor',\n    dataIndex: 'nombre',\n    key: 'Nombre',\n  },\n  {\n    title: 'Banco Emisor',\n    dataIndex: 'banco',\n    key: 'banco',\n  },\n  {\n    title: 'Cedula Receptor',\n    dataIndex: 'cedula_receptor',\n    key: 'cedula_receptor',\n  },\n  {\n    title: 'Nombre Receptor',\n    dataIndex: 'nombre_receptor',\n    key: 'nombre_receptor',\n  }, \n  {\n    title: 'Banco Receptor',\n    dataIndex: 'banco_receptor',\n    key: 'banco_receptor',\n  },\n  {\n    title: 'Monto Enviado',\n    dataIndex: 'monto_enviado',\n    key: 'monto_enviado',\n  },\n  {\n    title: 'Estatus Transaccion',\n    dataIndex: 'status',\n    key: 'status',\n  },    \n];\nconst dataSource = [\n  {\n    key: '1',\n    id:1,\n    cedula: 25443711,\n    nombre: 'Emmanuel José',\n    banco: 'BANESCO',\n    cedula_receptor:23791618,\n    nombre_receptor:'Yoselin Torres',\n    banco_receptor:'BANESCO',\n    monto_enviado:150000,\n    status:'Aprobado'\n  },\n  {\n    key: '2',\n    id:2,\n    cedula: 24956352,\n    nombre: 'Jesús Medina',\n    banco: 'VENEZUELA',\n    cedula_receptor:23558642,\n    nombre_receptor:'Cristian Gonzalez',\n    banco_receptor:'BANESCO',\n    monto_enviado:95000,\n    status:'Procesando'\n  },  \n  {\n    key: '3',\n    id:3,\n    cedula: 24996782,\n    nombre: 'Moises Flores',\n    banco: 'MICROFINANCIERO',\n    cedula_receptor:21986320,\n    nombre_receptor:'Felix Maita',\n    banco_receptor:'BANFANB',\n    monto_enviado:650000,\n    status:'Rechazado'\n  },  \n  {\n    key: '4',\n    id:4,\n    cedula: 24996782,\n    nombre: 'Ibai Llanos',\n    banco: 'BBVA',\n    cedula_receptor:21986320,\n    nombre_receptor:'Emmanuel José',\n    banco_receptor:'BANESCO',\n    monto_enviado:650000,\n    status:'Procesando'\n  },      \n\n];\nclass Transacciones extends React.Component{\n\n  state ={\n    dataSource:dataSource\n  }\n\n  filterName = (bank,name) => {\n    this.setState({dataSource:dataSource})\n    let newMap = [];\n    this.state.dataSource.map((data) => {\n      if(data.nombre === name){\n        newMap.push(data) \n      }\n      if(data.banco === bank){\n        newMap.push(data) \n      }     \n      if(data.nombre_receptor === name){\n        newMap.push(data) \n      }      \n    })\n\n    return newMap\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let datos = this.filterName(event.target.banco.value,event.target.nombre.value)\n    this.setState({\n      dataSource:datos\n    })\n    if (event.target.nombre.value === '' && event.target.banco.value === '') {\n      this.setState({\n        dataSource:dataSource\n      })\n    }    \n  }\n\n  handleChange = (event) => {\n\n  }\n\n  render(){\n    return (\n      <div style={{padding: '30px' }}>\n      <h3>Tú seccion de Transacciones</h3>\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card title=\"Tasa de cambio\" extra={<a href=\"#\">Actualizar <Icon type=\"reload\" /></a>} style={{ height:200, width: 300 }}>\n              <h2><center>8.000 VEF</center></h2>\n              <p>Datos pueden cambiar segun avance el dia</p>\n            </Card> \n          </Col>\n          <Col span={8}>        \n          <Card  title=\"Busqueda Inteligente\" extra={<Link to='/transacciones/registro'>Nueva Transaccion <Icon type=\"plus-circle\" /></Link>} style={{ height:200, width: 650 }}>\n            <Form layout='inline' onSubmit={this.handleSubmit}>\n                <Form.Item label=\"Nombres\">\n                  <Input name='nombre'/>\n                </Form.Item>\n                <Form.Item label=\"Fechas\">\n                  <RangePicker style={{ width: 240 }}  />\n                </Form.Item>          \n                <Form.Item label=\"Banco\">\n                   <Input name='banco'/>\n                </Form.Item>\n                <Form.Item\n                  wrapperCol={{\n                    xs: { span: 24, offset: 0 },\n                    sm: { span: 16, offset: 8 },\n                  }}\n                >\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Buscar<Icon type=\"search\" />\n                  </Button>\n                </Form.Item>\n              </Form>\n          </Card>\n        </Col>                \n        </Row>\n        <Table columns={columns} dataSource={this.state.dataSource}/>\n      </div>\n    );\n  };  \n}\nexport default Transacciones;\n"]},"metadata":{},"sourceType":"module"}